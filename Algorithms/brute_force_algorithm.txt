What is the Brute Force Algorithm?
--------------------------------------
A brute force algorithm is a simple, comprehensive search strategy that systematically explores every option until a problem’s answer is discovered. It’s a generic
approach to problem-solving that’s employed when the issue is small enough to make an in-depth investigation possible. However, because of their high temporal complexity,
brute force techniques are inefficient for large-scale issues.

Key takeaways:
----------------
Methodical Listing: 
Brute force algorithms investigate every potential solution to an issue, usually in an organized and detailed way. This involves attempting each
option in a specified order.

Relevance: 
When the issue space is small and easily explorable in a fair length of time, brute force is the most appropriate method. The temporal complexity of the
algorithm becomes unfeasible for larger issue situations.

Not using optimization or heuristics:
Brute force algorithms don’t use optimization or heuristic approaches. They depend on testing every potential outcome without ruling out any using clever pruning
or heuristics.

Features of the brute force algorithm
-----------------------------------------
It is an intuitive, direct, and straightforward technique of problem-solving in which all the possible ways or all the possible solutions to a given problem are enumerated.
Many problems are solved in day-to-day life using the brute force strategy, for example, exploring all the paths to a nearby market to find the minimum shortest path.
Arranging the books in a rack using all the possibilities to optimize the rack spaces, etc.
Daily life activities use a brute force nature, even though optimal algorithms are also possible.

PROS AND CONS OF BRUTE FORCE ALGORITHM:
-----------------------------------------
Pros:
The brute force approach is a guaranteed way to find the correct solution by listing all the possible candidate solutions for the problem.
It is a generic method and not limited to any specific domain of problems.
The brute force method is ideal for solving small and simpler problems.
It is known for its simplicity and can serve as a comparison benchmark.

Cons:
The brute force approach is inefficient. For real-time problems, algorithm analysis often goes above the O(N!) order of growth.
This method relies more on compromising the power of a computer system for solving a problem than on a good algorithm design.
Brute force algorithms are slow.
Brute force algorithms are not constructive or creative compared to algorithms that are constructed using some other design paradigms.

Example: -
------------
Imagine you have a small padlock with 4 digits, each from 0-9. You forgot your combination, but you don't want to buy another padlock. Since you can't remember
any of the digits, you have to use a brute force method to open the lock.

